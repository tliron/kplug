apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition

metadata:
  name: databasetables.myorg.org

spec:
  group: myorg.org
  names:
    singular: databasetable
    plural: databasetables
    kind: DatabaseTable
    listKind: DatabaseTableList
    categories:
    - all # will appear in "kubectl get all"
  scope: Namespaced
  versions:
  - name: v1alpha1
    served: true
    storage: true # one and only one version must be marked with storage=true
    subresources: # requires CustomResourceSubresources feature gate enabled
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        required: [ spec ]
        properties:
          spec:
            type: object
            required: [ columns ]
            properties:
              serverName:
                type: string
              preferredImplementation:
                type: string
              columns:
                type: array
                required: [ name, type ]
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    type:
                      type: string
              extensions:
                type: array
                nullable: true
                items:          
                  type: object
                  properties:
                    kind:
                      type: string
                    name:
                      type: string
                    namespace:
                      type: string
                    uid:
                      type: string
                    apiVersion:
                      type: string
                    resourceVersion:
                      type: string
                    fieldPath:
                      type: string
          status:
            type: object
            properties:
              implementation:
                type: string

---

apiVersion: v1
kind: Namespace

metadata:
  name: kplug-example
  labels:
    name: kplug-example

---

apiVersion: v1
kind: ServiceAccount

metadata:
  name: database-table-operator
  namespace: kplug-example

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role

metadata:
  name: database-table-operator
  namespace: kplug-example

rules:
- apiGroups: [ myorg.org ]
  resources: [ '*' ]
  verbs: [ '*' ]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding

metadata:
  name: database-table-operator
  namespace: kplug-example

subjects:
- kind: ServiceAccount
  name: database-table-operator
  namespace: kplug-example # required

roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: database-table-operator # must be in our namespace

---

apiVersion: apps/v1
kind: Deployment

metadata:
  name: database-table-operator
  namespace: kplug-example
  labels:
    app.kubernetes.io/name: database-table-operator
    app.kubernetes.io/instance: database-table-operator
    app.kubernetes.io/component: operator
    app.kubernetes.io/part-of: Kplug
    app.kubernetes.io/managed-by: Kplug

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: database-table-operator
      app.kubernetes.io/instance: database-table-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: database-table-operator
        app.kubernetes.io/instance: database-table-operator
        app.kubernetes.io/component: operator
        app.kubernetes.io/part-of: Kplug
        app.kubernetes.io/managed-by: Kplug
    spec:
      serviceAccount: database-table-operator
      containers:
      - name: operator
        image: docker.io/tliron/kplug-database-table-operator:latest
        imagePullPolicy: Always
        env:
        # Vars with the "DATABASE_TABLE_OPERATOR_" prefix become CLI flags 
        - name: DATABASE_TABLE_OPERATOR_concurrency
          value: '3'
        - name: DATABASE_TABLE_OPERATOR_verbose
          value: '1'
        ports:
        - name: grpc
          containerPort: 50050
        livenessProbe:
          httpGet:
            port: 8086
            path: /live
        readinessProbe:
          httpGet:
            port: 8086
            path: /ready
        
---

apiVersion: v1
kind: Service

metadata:
  name: database-table-operator
  namespace: kplug-example

spec:
  selector:
    app.kubernetes.io/name: database-table-operator
    app.kubernetes.io/instance: database-table-operator
  ports:
  - name: grpc
    protocol: TCP
    port: 50050
    targetPort: grpc
